#+STARTUP: odd

* About

Copyright 2017 Marco Wahl

Author: Marco Wahl <marcowahlsoft@gmail.com>
Maintainer: Marco Wahl <marcowahlsoft@gmail.com>
Created: 2017
Keywords: time, convenience
URL: https://gitlab.com/marcowahl/hack-time-mode

This file is not part of Emacs.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

* Commentary

Forge the current time in Emacs.

This is simply a minor mode.  You can turn it on to change the time
and later turn it off to go back to normal time.

Feel like in those SF films when the time stands still and the hero
can manipulate everything.

Note that this freeze covers not every time-source of Emacs.  E.g.
~(format-time-string "%X")~ gets its data somewhere else.

*** Build

Generate the source code by tangle this file.

Do this concretely by calling `org-babel-tangle' which usually can be
triggered by C-cv t.

* Code
:PROPERTIES:
# :header-args: :tangle hack-time-mode.el
:END:

*** The program
:PROPERTIES:
:ID:       bdf129d9-29f3-477c-9fab-a7879bdb7e5a
:END:

The first line follows [[info:elisp#Simple%20Packages][info:elisp#Simple Packages]].

#+begin_src emacs-lisp :tangle hack-time-mode.el :noweb yes
;;; hack-time-mode.el --- Forge time   -*- lexical-binding: t ; -*-
<<note-about-generation>>
#+end_src

#+name: inner-program
#+BEGIN_SRC emacs-lisp :noweb yes :tangle hack-time-mode.el :comments noweb
<<prologue>>
<<ht-minor-mode-config>>
<<freeze-current-time-core>>
<<commands>>
#+END_SRC

#+begin_src emacs-lisp :noweb yes :tangle hack-time-mode.el


(provide 'hack-time-mode)


;;; hack-time-mode.el ends here
#+end_src

*** Prologue
:PROPERTIES:
:ID:       e83c08f0-f37a-44c3-b9e9-bf6bb7a58402
:END:

#+NAME: prologue
#+BEGIN_SRC emacs-lisp :noweb yes
<<copyright>>
<<commentary>>
#+END_SRC

***** Copyright

#+NAME: copyright
#+BEGIN_SRC emacs-lisp


;; Copyright 2017 Marco Wahl
;;
;; Author: Marco Wahl <marcowahlsoft@gmail.com>
;; Maintainer: Marco Wahl <marcowahlsoft@gmail.com>
;; Created: 2017
;; Version: 0.0.0
;; Package-Requires: ((emacs "24.4"))
;; Keywords: time, convenience
;; URL: https://marcowahl.github.io/ https://github.com/marcowahl/little-helpers
;;
;; This file is not part of Emacs.
;;
;; This program is free software: you can redistribute it and/or modify
;; it under the terms of the GNU General Public License as published by
;; the Free Software Foundation, either version 3 of the License, or
;; (at your option) any later version.
;;
;; This program is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.
;;
;; You should have received a copy of the GNU General Public License
;; along with this program.  If not, see <http://www.gnu.org/licenses/>.
#+END_SRC

***** Note about generation

#+name: note-about-generation
#+begin_src emacs-lisp


;; This file is supposed to be generated.  The real source is an Org
;; file.  Keep this in mind when editing.
#+end_src

***** Commentary

#+name: commentary
#+begin_src emacs-lisp

;;; Commentary:

;; M-x hack-time-mode RET -1 12:05 RET
;;
;; sets current-time back to yesterday 12:05 PM.
;;
;; M-x hack-time-mode RET
;;
;; disables hack-time-mode and brings back time to normal.

;; See https://gitlab.com/marcowahl/hack-time-mode for the source.

#+end_src

*** Freeze Time
:PROPERTIES:
:ID:       38d197fc-0a4d-4b82-ac71-280021d0ea5c
:END:

***** To the mode
:PROPERTIES:
:ID:       e0a33b2d-e274-4dd4-bb43-a7e324383984
:END:

#+name: ht-minor-mode-config
#+begin_src emacs-lisp

;;;###autoload
(define-minor-mode hack-time-mode
  "Toggle hack-time-mode.
     Setting this variable directly does not take effect;
     use either \\[customize] or the function `hack-time-mode'."
  :group 'hack-time
  :global t
  :lighter " ht"
  (if hack-time-mode
      (call-interactively #'hack-time-set-current-time)
    (hack-time--current-time-back-to-normal)))
#+end_src

***** Core
:PROPERTIES:
:ID:       e62ab536-0322-4583-9994-0150a330445c
:END:

#+NAME: freeze-current-time-core
#+BEGIN_SRC emacs-lisp


(let (hack-time-mode-day)

  (defun hack-time-mode--freeze-advicer (x)
    "Can be advicer for ‘current-time’."
    (ignore x)
    (append (date-to-time (concat hack-time-mode-day " 11:55")) (list 0 0)))

  (defun hack-time-mode--current-time-back-to-normal ()
    "Remove all time hacks."
    (if (advice-member-p #'hack-time-mode--freeze-advicer #'current-time)
        (advice-remove #'current-time #'hack-time-mode--freeze-advicer)))

  (defun hack-time-mode--current-time-back-to-normal-with-message ()
    "Set current time back to normal and shout."
    (hack-time-mode--current-time-back-to-normal)
    (message "%s" (format-time-string "current-time is: %Y-%m-%d %H:%M"
                                      (current-time))))

  (defun hack-time-mode--current-time-do-freeze (yyyy-mm-dd-??:??-string)
    "Change ‘current-time’ to return the chosen date until reset.

Advice ‘current-time’ to return time YYYY-MM-DD-??:??-STRING.

If no hours and minutes given then use 11:55.

Note: This change does not affect every functionality that
depends on time in Emacs.  E.g. ‘format-time-string’ is not
affected."
    (hack-time-mode--current-time-back-to-normal)
    (setf hack-time-mode-day (concat yyyy-mm-dd-??:??-string " 11:55"))
    (advice-add #'current-time :filter-return #'hack-time-mode--freeze-advicer))

  (list 'hack-time-mode--current-time-back-to-normal-with-message
        'hack-time-mode--current-time-back-to-normal
        'hack-time-mode--freeze-advicer
        'hack-time-mode--current-time-do-freeze))
#+END_SRC

***** Commands
:PROPERTIES:
:ID:       5febcc2d-8798-4b1b-98ae-eb0f478db53d
:END:

#+name: commands
#+begin_src emacs-lisp

;; commands
(defun hack-time-mode-set-current-time ()
  "Ask user for a date and set it as current time.
The current time does not move until call of
`hack-time-mode-current-time-back-to-normal'.

Examples for specifying the current time.

- \"-1\" to set current time to yesterday at 11:55 am.
- \"-1 12:05\" to set current time to yesterday at 12:05 pm.

See `org-read-date' for more about how to specify the current
time."
  (interactive)
  (require 'org) ; for `org-read-date'
  (let ((target-date (org-read-date)))
    (hack-time-mode--current-time-do-freeze target-date))
  (message "%s" (format-time-string "current-time is: %Y-%m-%d %H:%M"
                                    (current-time))))
#+end_src

* Ideas

*** More tests

*** Relative time-hack

Shift to another time and let the time flow naturally there.  This is
opposed to a freeze.

* Closing notes


# Local Variables:
# End:
