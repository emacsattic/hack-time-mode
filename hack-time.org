#+STARTUP: odd

* About

Copyright 2017 Marco Wahl

Author: Marco Wahl <marcowahlsoft@gmail.com>
Maintainer: Marco Wahl <marcowahlsoft@gmail.com>
Created: 2017
Version: see version control
Keywords: time, convenience
URL: https://marcowahl.github.io/ https://github.com/marcowahl/little-helpers

This file is not part of Emacs.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

* Commentary

Functions to forge the time in Emacs.

E.g. feel like in those SF films when the time stands still and the
hero can manipulate everything.

Note that this freeze covers not every time-source of Emacs.  AFAICT
~(format-time-string "%X")~ gets its data somewhere else.

*** Build

Generate the source code by tangle this file.

Do this concretely by calling `org-babel-tangle' which usually can be
triggered by C-cv t.

* Code
:PROPERTIES:
# :header-args: :tangle generated/hack-time.el
:END:

*** The program
:PROPERTIES:
:ID:       bdf129d9-29f3-477c-9fab-a7879bdb7e5a
:END:

The first line follows [[info:elisp#Simple%20Packages][info:elisp#Simple Packages]].

#+begin_src emacs-lisp :tangle generated/hack-time.el :noweb yes
;;; hack-time.el --- Hack the time in Emacs   -*- lexical-binding: t -*-
<<note-about-generation>>
#+end_src

#+name: inner-program
#+BEGIN_SRC emacs-lisp :noweb yes :tangle generated/hack-time.el :comments noweb
<<prologue>>
<<freeze-current-time-core>>
<<commands>>
#+END_SRC

#+begin_src emacs-lisp :noweb yes :tangle generated/hack-time.el


(provide 'hack-time)


;;; hack-time.el ends here
#+end_src

*** Prologue
:PROPERTIES:
:ID:       e83c08f0-f37a-44c3-b9e9-bf6bb7a58402
:END:

#+NAME: prologue
#+BEGIN_SRC emacs-lisp :noweb yes
<<copyright>>
#+END_SRC

***** Copyright

#+NAME: copyright
#+BEGIN_SRC emacs-lisp


;; Copyright 2017 Marco Wahl
;;
;; Author: Marco Wahl <marcowahlsoft@gmail.com>
;; Maintainer: Marco Wahl <marcowahlsoft@gmail.com>
;; Created: 2017
;; Version: see version control
;; Keywords: time, convenience
;; URL: https://marcowahl.github.io/ https://github.com/marcowahl/little-helpers
;;
;; This file is not part of Emacs.
;;
;; This program is free software: you can redistribute it and/or modify
;; it under the terms of the GNU General Public License as published by
;; the Free Software Foundation, either version 3 of the License, or
;; (at your option) any later version.
;;
;; This program is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.
;;
;; You should have received a copy of the GNU General Public License
;; along with this program.  If not, see <http://www.gnu.org/licenses/>.
#+END_SRC

***** Note about generation

#+name: note-about-generation
#+begin_src emacs-lisp


;; This file is supposed to be generated.  The real source is an Org
;; file.  Keep this in mind when editing.
#+end_src

*** Freeze Time
:PROPERTIES:
:ID:       38d197fc-0a4d-4b82-ac71-280021d0ea5c
:END:

***** Core
:PROPERTIES:
:ID:       e62ab536-0322-4583-9994-0150a330445c
:END:

#+NAME: freeze-current-time-core
#+BEGIN_SRC emacs-lisp


(let (hack-time-day)

  (defun hack-time--freeze-advicer (x)
    "Can be advicer for ‘current-time’."
    (append (date-to-time (concat hack-time-day " 11:55")) (list 0 0)))

  (defun hack-time--current-time-back-to-normal ()
    "Remove all time hacks."
    (if (advice-member-p #'hack-time--freeze-advicer #'current-time)
        (advice-remove #'current-time #'hack-time--freeze-advicer)))

  (defun hack-time--current-time-do-freeze (yyyy-mm-dd-??:??-string)
    "Change ‘current-time’ to return the chosen date until reset.

Advice ‘current-time’ to return time YYYY-MM-DD-??:??-STRING.

If no hours and minutes given then use 11:55.

Note: This change does not affect every functionality that
depends on time in Emacs.  E.g. ‘format-time-string’ is not
affected."
    (hack-time--current-time-back-to-normal)
    (setf hack-time-day (concat yyyy-mm-dd-??:??-string " 11:55"))
    (advice-add #'current-time :filter-return #'hack-time--freeze-advicer)))
#+END_SRC

***** Commands
:PROPERTIES:
:ID:       5febcc2d-8798-4b1b-98ae-eb0f478db53d
:END:

#+name: commands
#+begin_src emacs-lisp


;; commands
(defun hack-time-current-time-back-to-normal ()
  "Remove all time hacks."
  (interactive)
  (hack-time--current-time-back-to-normal))

(defun hack-time-current-time-to-calendar-date (yyyy-mm-dd-?\?:\?\?-string)
  "Hack time to the date of the calendar.

Hour and minute are set to 11:55am.

Note: This change does not affect every functionality that
depends on time in Emacs.  E.g. ‘format-time-string’ is not
affected."
  (interactive (let ((from-calendar (org-get-date-from-calendar)))
                 (list (format "%02d-%02d-%02d"
                               (caddr from-calendar)
                               (car from-calendar)
                               (cadr from-calendar)))))
  (hack-time--current-time-do-freeze yyyy-mm-dd-?\?:\?\?-string))
#+end_src

* Ideas
*** Test

*** Indicator

Somehow indicate that a time-hack is applied when it is.

- minor mode?

*** Relative time-hack

Shift to another time and let the time flow naturally there.  Opposed
to an absolute freeze.

* Closing notes


# Local Variables:
# End:
